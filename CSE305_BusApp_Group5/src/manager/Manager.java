/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manager;

import accountSite.*;
import bus.InsertBus;
import entity.*;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Administrator
 */
public class Manager extends javax.swing.JFrame {

    private SqlInfomation newSql;
    private App_Manager manager1;

    /**
     * Creates new form main_window
     */
    public Manager(App_Manager manager) {
        initComponents();
        this.manager1 = manager;
        this.newSql = new SqlInfomation();
        this.jbManager.setText("Manager " + manager1.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManager = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cmbTable = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JToggleButton();
        cmbElement = new javax.swing.JComboBox<>();
        tftSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        jbManager = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblManagerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblManager);

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel1.setText("CUSTOMER");

        btnInsert.setText("INSERT");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("EDIT");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cmbTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BUS", "ROUTE", "EVENT" }));
        cmbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbTableMouseEntered(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Choose table");

        btnSelect.setText("Show table");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        tftSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tftSearchKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setLabelFor(tftSearch);
        jLabel3.setText("Search");

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCustomer);

        jbManager.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jbManager.setText("MANAGER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReturn)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInsert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(jbManager, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tftSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbTable, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbElement, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn)
                    .addComponent(jbManager))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbElement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelect))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tftSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        switch (cmbTable.getSelectedIndex()) {
            case 0:
                InsertBus newBus = new InsertBus();
                newBus.setVisible(true);
                break;
            case 1:
                break;
            case 2:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblManager.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel) tblManager.getModel();
        String string = "";
        for (int i = 0; i < tblManager.getColumnCount(); i++) {
            string += tableModel.getColumnName(i) + "='" + tableModel.getValueAt(row, i).toString() + "' and ";
        }
        string = (String) string.subSequence(0, string.length() - 4) + ";";
        int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure about that ?", "Confirm", JOptionPane.YES_NO_OPTION);
        //System.out.println("delete from "+cbxOfTuples.getSelectedItem().toString()+" where "+ string);
        if (result == JOptionPane.YES_NO_OPTION) {
            updateOrDisplayTable("delete from bus_app." + cmbTable.getSelectedItem().toString() + " where " + string, btnDelete.getText());
            btnSelectActionPerformed(evt);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here
        String query = "select " + cmbElement.getSelectedItem().toString().trim() + " from " + cmbTable.getSelectedItem().toString().trim();
        updateOrDisplayTable(query, "Select");
    }//GEN-LAST:event_btnSelectActionPerformed

    private void cmbTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTableMouseEntered
        // TODO add your handling code here:
        try {
            String query = "SELECT * from " + cmbTable.getSelectedItem().toString().trim() + "";
            // loading mysql driver class
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection with database
            String url = "jdbc:mysql://localhost:3306/bank_system";
            //create a connection object to register the driver
            java.sql.Connection con = DriverManager.getConnection(newSql.getUrl(), newSql.getAcc(), newSql.getPass());
            //create a statement object
            Statement st = con.createStatement();
            //Create a ResultSet object and store the return object of query execution
            ResultSet rs;
            rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            int n = rsmd.getColumnCount();
            String[] list = new String[n + 1];
            list[0] = "*";
            for (int i = 1; i < list.length; i++) {
                list[i] = rsmd.getColumnName(i);
            }
            con.close();
            cmbElement.setModel(new javax.swing.DefaultComboBoxModel<>(list));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbTableMouseEntered

    private void tftSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tftSearchKeyPressed
        // TODO add your handling code here:
        String stringSearch = tftSearch.getText();
        search(stringSearch);
    }//GEN-LAST:event_tftSearchKeyPressed

    private void tblManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManagerMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblManagerMouseClicked

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        Login returnWin = new Login();
        this.dispose();
        returnWin.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int row = tblManager.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel) tblManager.getModel();
        String[] string = new String[tableModel.getColumnCount()];
        for (int i = 0; i < tblManager.getColumnCount(); i++) {
            string[i] = tableModel.getValueAt(row, i).toString();
        }
        System.out.println(cmbTable.getSelectedIndex());
        switch (cmbTable.getSelectedIndex()) {
            case 0:

            case 1:

        }

        btnSelectActionPerformed(evt);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCustomerMouseClicked

    private void updateOrDisplayTable(String query, String action) {
        try {
            // loading mysql driver class
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection with database

            //create a connection object to register the driver
            java.sql.Connection con = DriverManager.getConnection(newSql.getUrl(), newSql.getAcc(), newSql.getPass());
            //create a statement object
            Statement st = con.createStatement();
            //Create a ResultSet object and store the return object of query execution
            ResultSet rs;
            if (action.compareTo("Select") == 0) {
                rs = st.executeQuery(query);
            } else {
                st.executeUpdate(query);
                return;
            }

            //Retrieving the result object
            ResultSetMetaData rsmd = rs.getMetaData();
            //get number of column
            int nColumn = rsmd.getColumnCount();
            // Creating a default table object and typecast out JTable into it
            DefaultTableModel tblModel = (DefaultTableModel) tblManager.getModel();
            tblModel.setColumnCount(0);
            tblModel.setRowCount(0);
            for (int j = 0; j < nColumn;) {
                // Adding colum name according to metadata information
                tblModel.addColumn(rsmd.getColumnName(++j));
            }
            while (rs.next()) {
                String Row[] = new String[nColumn + 1];
                for (int i = 0; i < nColumn; i++) {
                    Row[i] = rs.getString(i + 1);
                }
                tblModel.addRow(Row);
            }
            con.close();
        } catch (Exception e) {
            String error = e.toString();
            JOptionPane.showMessageDialog(tblManager, error);

        }
    }

    public void search(String str) {
        DefaultTableModel model = (DefaultTableModel) tblManager.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        tblManager.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }

    /**
     * @param args the command line arguments
     * @throws java.lang.InstantiationException
     */
    private void showCustomer() {
        try {
            // loading mysql driver class
            Class.forName("com.mysql.cj.jdbc.Driver");
            //create connection with database
            SqlInfomation newSql = new SqlInfomation();
            //create a connection object to register the driver
            java.sql.Connection con = DriverManager.getConnection(newSql.getUrl(), newSql.getAcc(), newSql.getPass());
            //create a statement object
            Statement st = con.createStatement();
            //Create a ResultSet object and store the return object of query execution
            ResultSet rs;
            rs = st.executeQuery("select * from user");
            //Retrieving the result object
            ResultSetMetaData rsmd = rs.getMetaData();
            //get number of column
            int nColumn = rsmd.getColumnCount();
            // Creating a default table object and typecast out JTable into it
            DefaultTableModel tblModel = (DefaultTableModel) tblCustomer.getModel();
            tblModel.setColumnCount(0);
            tblModel.setRowCount(0);
            for (int j = 0; j < nColumn;) {
                // Adding colum name according to metadata information
                tblModel.addColumn(rsmd.getColumnName(++j));
            }
            while (rs.next()) {
                String Row[] = new String[nColumn + 1];
                for (int i = 0; i < nColumn; i++) {
                    Row[i] = rs.getString(i + 1);
                }
                tblModel.addRow(Row);
            }
            con.close();
        } catch (Exception e) {
            String error = e.toString();
            JOptionPane.showMessageDialog(tblManager, error);

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReturn;
    private javax.swing.JToggleButton btnSelect;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbElement;
    private javax.swing.JComboBox<String> cmbTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jbManager;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTable tblManager;
    private javax.swing.JTextField tftSearch;
    // End of variables declaration//GEN-END:variables
}
